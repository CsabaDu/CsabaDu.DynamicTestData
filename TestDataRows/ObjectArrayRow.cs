// SPDX-License-Identifier: MIT
// Copyright (c) 2025. Csaba Dudas (CsabaDu)

namespace CsabaDu.DynamicTestData.TestDataRows;

/// <summary>
/// Concrete test data row implementation that exposes test parameters as an object array.
/// </summary>
/// <typeparam name="TTestData">
/// The type of test data this row contains (must be non-null and implement <see cref="ITestData"/>).
/// </typeparam>
/// <param name="testData">The test data instance containing all test parameters and expectations.</param>
/// <remarks>
/// <para>
/// Specialized for test cases that require direct access to parameter arrays, particularly useful for:
/// </para>
/// <list type="bullet">
///   <item>Data-driven tests expecting parameter arrays</item>
///   <item>Test frameworks requiring object array inputs</item>
///   <item>Scenarios needing untyped parameter access</item>
/// </list>
/// <para>
/// Inherits from <see cref="TestDataRow{TRow, TTestData}"/> with <see cref="object?[]"/> as the target type,
/// creating a direct mapping between test data and execution parameters.
/// </para>
/// </remarks>
public class ObjectArrayRow<TTestData>(TTestData testData)
: TestDataRow<object?[], TTestData>(testData)
where TTestData : notnull, ITestData
{
    /// <summary>
    /// Converts the test data to an object array using the specified data strategy.
    /// </summary>
    /// <param name="dataStrategy">
    /// Determines which parameters to include and their format.
    /// </param>
    /// <returns>
    /// The raw parameter array generated by the test data.
    /// </returns>
    /// <remarks>
    /// <para>
    /// This implementation provides direct pass-through to <see cref="TestDataRow{TRow}.GetParams"/>
    /// since the target type (<see cref="object?[]"/>) matches the parameter format.
    /// </para>
    /// <para>
    /// The returned array may contain:
    /// </para>
    /// <list type="bullet">
    ///   <item>Test input values</item>
    ///   <item>Expected results</item>
    ///   <item>Null values where applicable</item>
    /// </list>
    /// </remarks>
    public override object?[] Convert(IDataStrategy dataStrategy)
    => GetParams(dataStrategy);
}